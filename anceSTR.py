#!/usr/bin/env python3
""" "@author: dannear """

import sys, argparse, os

class anceSTR(object):

    def __init__(self):
        parser = argparse.ArgumentParser(
            description='Analysis to determine inheritance patterens for repeat genotypes generated by ExpansionHunter and proccessed by STRparse',
            usage='''anceSTR <command> [<args>]

The avaialble commands are:
    trio_analysis      Analyse the inhertance patterns of STR genotypes within a set of trios. Input data format: Repeat_ID   Trio_ID   proband1   proband2   mother1   mother2   father1    father2
    build_graphs       Build a set of graphs to illustrate trio_analysis data.
''')
        parser.add_argument('command', help='Subcommand to run')
        args = parser.parse_args(sys.argv[1:2])
        if not hasattr(self, args.command):
            print('Unrecognized command')
            parser.print_help()
            exit(1)
        getattr(self, args.command)()

    def trio_analysis(self):
        sys.path.insert(1, os.path.join(os.path.dirname(__file__), "anceSTR", "trio_analysis"))
        parser = argparse.ArgumentParser(description='Select VCF directory and STR genotyper.')
        parser.add_argument('-i', '--input', type=str, metavar="", required=True, help='Input table file. Tab seperation. Format: Repeat_ID   Trio_ID   proband1   proband2   mother1   mother2   father1    father2')
        parser.add_argument('-o', '--output', type=str, metavar="", required=True, help='Output Path')
        parser.add_argument('-b', '--build', type=int, metavar="", nargs="?", const=19, required=False, help='Specify reference genome')
        args = parser.parse_args(sys.argv[2:])

        from trios_main import main
        main(args.input, args.output, args.build)


    def build_graphs(self):
        sys.path.insert(1, os.path.join(os.path.dirname(__file__), "anceSTR", "anceSTR"))
        parser = argparse.ArgumentParser(description='Merge CSV files containnig ExpansionHunter and GangSTR data')
        parser.add_argument('-i', '--input', type=str, metavar="", required=True, help='Path to the results of the trio analysis')
        parser.add_argument('-o', '--output', type=str, metavar="", required=True, help='Output directory path for graphs')
        args = parser.parse_args(sys.argv[2:])

        from csvmerge_main import main
        main(args.input, args.output)

if __name__ == '__main__':
    anceSTR()
